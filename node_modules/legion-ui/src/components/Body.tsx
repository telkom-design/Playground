/** @jsx jsx */

import React from 'react';
import { jsx, useThemeUI } from '@theme-ui/core';
import { get } from '@theme-ui/css';
import { Text as Component, TextProps as Props, ForwardRef } from '@theme-ui/components';

export interface TextProps extends Props {
  variant: 'lg_reguler' | 'lg_semibold' | 'lg_bold' | 'lg_italic' | 'lg_underline' | 'lg_underline_semibold' | 'lg_underline_bold' |
  'sm_reguler' | 'sm_semibold' | 'sm_bold' | 'sm_italic' | 'sm_underline' | 'sm_underline_semibold' | 'sm_underline_bold',
  size: 'lg_reguler' | 'lg_semibold' | 'lg_bold' | 'lg_italic' | 'lg_underline' | 'lg_underline_semibold' | 'lg_underline_bold' |
  'sm_reguler' | 'sm_semibold' | 'sm_bold' | 'sm_italic' | 'sm_underline' | 'sm_underline_semibold' | 'sm_underline_bold',
}

export const Body: ForwardRef<HTMLDivElement, TextProps> = React.forwardRef(
  ({ variant = 'lg-reguler', children, ...rest }, ref) => {
    const context = useThemeUI();
    const variants = get(context.theme, `text.default.${variant}`);
    return (
      <Component
        {...rest}
        ref={ref}
        sx={{ ...variants }}
      >
        {children}
      </Component>
    );
  }
)

export const Caption: ForwardRef<HTMLDivElement, TextProps> = React.forwardRef(
  ({ size = 'lg_reguler', children, ...rest }, ref) => {
    const context = useThemeUI();
    const sizes = get(context.theme, `text.default.sizes.${size}`);
    return (
      <Component
        {...rest}
        ref={ref}
        sx={{ ...sizes }}
      >
        {children}
      </Component>
    );
  }
)

// export default Body;