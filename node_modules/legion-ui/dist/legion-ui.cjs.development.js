'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var utils = require('@theme-ui/css/utils');
require('deepmerge');
var core = require('@theme-ui/core');
var css = require('@theme-ui/css');
var components = require('@theme-ui/components');
var React = _interopDefault(require('react'));
var reactFeather = require('react-feather');

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var button = {
  alignItems: 'center',
  borderRadius: '4px',
  cursor: 'pointer',
  display: 'flex',
  lineHeight: '21px',
  fontWeight: '700',
  justifyContent: 'center'
};

var text = {
  body_lg_reguler: {
    fontSize: '18px',
    lineHeight: '28px',
    fontWeight: 400
  },
  body_lg_semibold: {
    fontSize: '18px',
    lineHeight: '28px',
    fontWeight: 600
  },
  body_lg_bold: {
    fontSize: '18px',
    lineHeight: '28px',
    fontWeight: 700
  },
  body_lg_italic: {
    fontSize: '18px',
    lineHeight: '28px',
    fontWeight: 400,
    fontStyle: 'italic'
  },
  body_lg_underline: {
    fontSize: '18px',
    lineHeight: '28px',
    fontWeight: 400,
    textDecoration: 'underline'
  },
  body_lg_underline_semibold: {
    fontSize: '18px',
    lineHeight: '28px',
    fontWeight: 600,
    textDecoration: 'underline'
  },
  body_lg_underline_bold: {
    fontSize: '18px',
    lineHeight: '28px',
    fontWeight: 700,
    textDecoration: 'underline'
  },
  body_sm_reguler: {
    fontSize: '16px',
    lineHeight: '24px',
    fontWeight: 400
  },
  body_sm_semibold: {
    fontSize: '16px',
    lineHeight: '24px',
    fontWeight: 600
  },
  body_sm_bold: {
    fontSize: '16px',
    lineHeight: '24px',
    fontWeight: 700
  },
  body_sm_italic: {
    fontSize: '16px',
    lineHeight: '24px',
    fontWeight: 400,
    fontStyle: 'italic'
  },
  body_sm_underline: {
    fontSize: '16px',
    lineHeight: '24px',
    fontWeight: 400,
    textDecoration: 'underline'
  },
  body_sm_underline_semibold: {
    fontSize: '16px',
    lineHeight: '24px',
    fontWeight: 600,
    textDecoration: 'underline'
  },
  body_sm_underline_bold: {
    fontSize: '16px',
    lineHeight: '24px',
    fontWeight: 700,
    textDecoration: 'underline'
  },
  caption_lg_reguler: {
    fontSize: '14px',
    lineHeight: '21px',
    fontWeight: 400
  },
  caption_lg_semibold: {
    fontSize: '14px',
    lineHeight: '21px',
    fontWeight: 600
  },
  caption_lg_bold: {
    fontSize: '14px',
    lineHeight: '21px',
    fontWeight: 700
  },
  caption_lg_italic: {
    fontSize: '14px',
    lineHeight: '21px',
    fontWeight: 400,
    fontStyle: 'italic'
  },
  caption_lg_underline: {
    fontSize: '14px',
    lineHeight: '21px',
    fontWeight: 400,
    textDecoration: 'underline'
  },
  caption_lg_underline_semibold: {
    fontSize: '14px',
    lineHeight: '21px',
    fontWeight: 600,
    textDecoration: 'underline'
  },
  caption_lg_underline_bold: {
    fontSize: '14px',
    lineHeight: '21px',
    fontWeight: 700,
    textDecoration: 'underline'
  },
  caption_sm_reguler: {
    fontSize: '12px',
    lineHeight: '18px',
    fontWeight: 400
  },
  caption_sm_semibold: {
    fontSize: '12px',
    lineHeight: '18px',
    fontWeight: 600
  },
  caption_sm_bold: {
    fontSize: '12px',
    lineHeight: '18px',
    fontWeight: 700
  },
  caption_sm_italic: {
    fontSize: '12px',
    lineHeight: '18px',
    fontWeight: 400,
    fontStyle: 'italic'
  },
  caption_sm_underline: {
    fontSize: '12px',
    lineHeight: '18px',
    fontWeight: 400,
    textDecoration: 'underline'
  },
  caption_sm_underline_semibold: {
    fontSize: '12px',
    lineHeight: '18px',
    fontWeight: 600,
    textDecoration: 'underline'
  },
  caption_sm_underline_bold: {
    fontSize: '12px',
    lineHeight: '18px',
    fontWeight: 700,
    textDecoration: 'underline'
  },
  h1: {
    fontSize: '60px',
    lineHeight: '72px',
    fontWeight: '700'
  },
  h2: {
    fontSize: '48px',
    lineHeight: '56px',
    fontWeight: '700'
  },
  h3: {
    fontSize: '36px',
    lineHeight: '44px',
    fontWeight: '700'
  },
  h4: {
    fontSize: '30px',
    lineHeight: '40px',
    fontWeight: '700'
  },
  h5: {
    fontSize: '24px',
    lineHeight: '36px',
    fontWeight: '700'
  },
  h6: {
    fontSize: '20px',
    lineHeight: '28px',
    fontWeight: '700'
  }
};

var color = {
  primary70: '#A40917',
  primary60: '#C40D0E',
  primary50: '#E42313',
  primary40: '#EEAFAF',
  primary30: '#F4CACA',
  primary20: '#F9E4E4',
  primary10: '#FDF7F7',
  secondary70: '#474D66',
  secondary60: '#8F95B2',
  secondary50: '#D8DAE5',
  secondary40: '#EDEFF5',
  secondary30: '#F9FAFC',
  secondary20: '#FBFCFF',
  secondary10: '#FFFFFF',
  warning70: '#66460D',
  warning60: '#996A13',
  warning50: '#FFB020',
  warning40: '#FFD079',
  warning30: '#FFDFA6',
  warning20: '#FFEFD2',
  warning10: '#FFFAF1',
  success70: '#317159',
  success60: '#429777',
  success50: '#52BD94',
  success40: '#A3E6CD',
  success30: '#DCF2EA',
  success20: '#EEF8F4',
  success10: '#F5FBF8',
  error70: '#A74436',
  error60: '#BF2600',
  error50: '#FF5630',
  error40: '#FF7452',
  error30: '#FFBDAD',
  error20: '#FFEBE6',
  error10: '#FFF5F3',
  information70: '#1F3D99',
  information60: '#2952CC',
  information50: '#3366FF',
  information40: '#9DB5FF',
  information30: '#D6E0FF',
  information20: '#EBF0FF',
  information10: '#F3F6FF',
  grayscale100: '#151718',
  grayscale90: '#262829',
  grayscale80: '#2E3032',
  grayscale70: '#5C5E61',
  grayscale60: '#8C8F93',
  grayscale50: '#B1B5BA',
  grayscale40: '#C8CCD2',
  grayscale30: '#D9DDE3',
  grayscale20: '#F2F4F6',
  grayscale10: '#FFFFFF'
};

// Spacer
var radius = {
  radius0: '0px',
  radius1: '0.125rem',
  radius2: '0.25rem',
  radius3: '0.375rem',
  radius4: '0.5rem',
  radius5: '0.75rem',
  radius6: '1rem',
  radius7: '1.5rem',
  radius8: '1.75rem',
  radius9: '2rem'
};

// Spacer
var spacer = {
  spacing0: '1px',
  spacing1: '4px',
  spacing2: '0.5rem',
  spacing3: '0.75rem',
  spacing4: '1rem',
  spacing5: '1.25rem',
  spacing6: '1.5rem',
  spacing7: '1.75rem',
  spacing8: '2rem',
  spacing9: '2.25rem',
  spacing10: '2.5rem',
  spacing11: '3rem',
  spacing12: '3.5rem',
  spacing13: '4rem',
  spacing14: '5rem',
  spacing15: '6rem',
  spacing16: '7rem',
  spacing17: '8rem',
  spacing18: '9rem',
  spacing19: '10rem',
  spacing20: '11rem',
  spacing21: '12rem',
  spacing22: '13rem',
  spacing23: '14rem',
  spacing24: '15rem',
  spacing25: '16rem',
  spacing26: '18rem',
  spacing27: '20rem',
  spacing28: '24rem'
};

var _formSideCenter, _containerLoginCen, _formSideRight, _formSideLeft, _containerLogin;
var theme = /*#__PURE__*/utils.makeTheme({
  //...base,
  colors: /*#__PURE__*/_extends({}, color),
  spacers: /*#__PURE__*/_extends({}, spacer),
  layout: {
    container: {
      fontFamily: 'Nunito Sans, sans-serif',
      '.container-login-center': (_containerLoginCen = {}, _containerLoginCen['@media (max-width:480px)'] = {
        '.container-side-right': {
          display: 'none'
        }
      }, _containerLoginCen.position = 'relative', _containerLoginCen.overflow = 'hidden', _containerLoginCen.height = '100vh', _containerLoginCen['.form-side-center'] = (_formSideCenter = {}, _formSideCenter['@media (max-width:480px)'] = {
        height: '90vh',
        width: '90%'
      }, _formSideCenter.position = 'absolute', _formSideCenter.backgroundColor = color.grayscale10, _formSideCenter.top = '50%', _formSideCenter.left = '50%', _formSideCenter.transform = 'translate(-50%, -50%)', _formSideCenter.width = '50%', _formSideCenter.padding = '50px 50px 20px 50px', _formSideCenter.overflowY = 'scroll', _formSideCenter.height = '70vh', _formSideCenter['.container-logo'] = {
        textAlign: 'center',
        '.wrapper-logo': {
          width: '150px'
        }
      }, _formSideCenter['.wrapper-title'] = {
        color: color.secondary70,
        fontWeight: 700,
        fontSize: '36px',
        marginTop: spacer.spacing8,
        marginBottom: spacer.spacing3,
        textAlign: 'center'
      }, _formSideCenter['.wrapper-desc'] = {
        color: color.grayscale50,
        lineHeight: '24px',
        fontSize: '16px',
        marginBottom: spacer.spacing6,
        textAlign: 'center'
      }, _formSideCenter['.wrapper-remember'] = {
        display: 'flex',
        justifyContent: 'space-between',
        marginTop: spacer.spacing6,
        marginBottom: spacer.spacing6
      }, _formSideCenter['.wrapper-button'] = {
        width: '100%'
      }, _formSideCenter['.wrapper-or'] = {
        display: 'flex',
        alignItems: 'center',
        marginTop: spacer.spacing4,
        marginBottom: spacer.spacing4,
        '.wrapper-line': {
          width: '50%',
          borderBottom: "1px solid " + color.grayscale40
        },
        '.or': {
          marginLeft: '20px',
          marginRight: '20px'
        }
      }, _formSideCenter['.wrapper-register'] = {
        color: color.grayscale70,
        fontWeight: 600,
        fontSize: '16px',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        marginTop: spacer.spacing4,
        marginBottom: spacer.spacing10
      }, _formSideCenter['.wrapper-footer'] = {
        color: color.grayscale80,
        fontWeight: 600,
        fontSize: '14px',
        display: 'flex',
        justifyContent: 'center',
        fontFamily: 'Nunito Sans, sans-serif'
      }, _formSideCenter), _containerLoginCen['.container-side-right'] = {
        width: '100%',
        '.wrapper-background': {
          width: '100% !important',
          height: '100vh !important',
          objectFit: 'cover'
        }
      }, _containerLoginCen),
      '.container-login': (_containerLogin = {}, _containerLogin['@media (max-width:768px)'] = {
        '.container-side-right': {
          display: 'none'
        }
      }, _containerLogin.display = 'flex', _containerLogin.overflow = 'hidden', _containerLogin.height = '100vh', _containerLogin['.form-side-right'] = (_formSideRight = {}, _formSideRight['@media (max-width:480px)'] = {
        padding: '20px',
        width: '100%'
      }, _formSideRight.order = 1, _formSideRight.width = '75%', _formSideRight.padding = '50px 100px', _formSideRight.overflowY = 'scroll', _formSideRight.height = '100vh', _formSideRight.position = 'relative', _formSideRight['.wrapper-logo'] = {
        width: '150px'
      }, _formSideRight['.wrapper-title'] = {
        color: color.secondary70,
        fontWeight: 700,
        fontSize: '36px',
        marginTop: spacer.spacing8,
        marginBottom: spacer.spacing3
      }, _formSideRight['.wrapper-desc'] = {
        color: color.grayscale50,
        lineHeight: '24px',
        fontSize: '16px',
        marginBottom: spacer.spacing6
      }, _formSideRight['.wrapper-title-email'] = {
        color: color.grayscale80,
        fontWeight: 600,
        fontSize: '16px'
      }, _formSideRight['.wrapper-title-pass'] = {
        color: color.grayscale80,
        marginTop: spacer.spacing6,
        fontWeight: 600,
        fontSize: '16px'
      }, _formSideRight['.wrapper-remember'] = {
        display: 'flex',
        justifyContent: 'space-between',
        marginTop: spacer.spacing6,
        marginBottom: spacer.spacing6
      }, _formSideRight['.wrapper-button'] = {
        width: '100%'
      }, _formSideRight['.wrapper-or'] = {
        display: 'flex',
        alignItems: 'center',
        marginTop: spacer.spacing4,
        marginBottom: spacer.spacing4,
        '.wrapper-line': {
          width: '50%',
          borderBottom: "1px solid " + color.grayscale40
        },
        '.or': {
          marginLeft: '20px',
          marginRight: '20px'
        }
      }, _formSideRight['.wrapper-register'] = {
        color: color.grayscale70,
        fontWeight: 600,
        fontSize: '16px',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        marginTop: spacer.spacing4,
        marginBottom: spacer.spacing10
      }, _formSideRight['.wrapper-footer'] = {
        color: color.grayscale80,
        fontWeight: 600,
        fontSize: '14px',
        display: 'flex',
        justifyContent: 'center',
        marginBottom: '70px',
        fontFamily: 'Nunito Sans, sans-serif'
      }, _formSideRight), _containerLogin['.form-side-left'] = (_formSideLeft = {}, _formSideLeft['@media (max-width:480px)'] = {
        padding: '20px',
        width: '100%'
      }, _formSideLeft.width = '75%', _formSideLeft.padding = '50px 100px', _formSideLeft.overflowY = 'scroll', _formSideLeft.height = '100vh', _formSideLeft.position = 'relative', _formSideLeft['.wrapper-logo'] = {
        width: '150px'
      }, _formSideLeft['.wrapper-title'] = {
        color: color.secondary70,
        fontWeight: 700,
        fontSize: '36px',
        marginTop: spacer.spacing8,
        marginBottom: spacer.spacing3
      }, _formSideLeft['.wrapper-desc'] = {
        color: color.grayscale50,
        lineHeight: '24px',
        fontSize: '16px',
        marginBottom: spacer.spacing6
      }, _formSideLeft['.wrapper-title-email'] = {
        color: color.grayscale80,
        fontWeight: 600,
        fontSize: '16px'
      }, _formSideLeft['.wrapper-title-pass'] = {
        color: color.grayscale80,
        marginTop: spacer.spacing6,
        fontWeight: 600,
        fontSize: '16px'
      }, _formSideLeft['.wrapper-remember'] = {
        display: 'flex',
        justifyContent: 'space-between',
        marginTop: spacer.spacing6,
        marginBottom: spacer.spacing6
      }, _formSideLeft['.wrapper-button'] = {
        width: '100%'
      }, _formSideLeft['.wrapper-or'] = {
        display: 'flex',
        alignItems: 'center',
        marginTop: spacer.spacing4,
        marginBottom: spacer.spacing4,
        '.wrapper-line': {
          width: '50%',
          borderBottom: "1px solid " + color.grayscale40
        },
        '.or': {
          marginLeft: '20px',
          marginRight: '20px'
        }
      }, _formSideLeft['.wrapper-register'] = {
        color: color.grayscale70,
        fontWeight: 600,
        fontSize: '16px',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        marginTop: spacer.spacing4,
        marginBottom: spacer.spacing10
      }, _formSideLeft['.wrapper-footer'] = {
        color: color.grayscale80,
        fontWeight: 600,
        fontSize: '14px',
        display: 'flex',
        justifyContent: 'center',
        marginBottom: '70px',
        fontFamily: 'Nunito Sans, sans-serif'
      }, _formSideLeft), _containerLogin['.container-side-right'] = {
        width: '100%',
        '.wrapper-background': {
          width: '100% !important',
          height: '100vh !important',
          objectFit: 'cover'
        }
      }, _containerLogin)
    }
  },
  styles: {
    a: {
      '&:hover': {
        color: "" + color.primary60,
        textDecoration: 'underline',
        outline: 'none',
        cursor: 'pointer'
      },
      '&:active': {
        color: color.primary70 + " !important",
        outline: 'none !important',
        textDecoration: 'underline !important'
      },
      '&:focus': {
        outline: "2px solid " + color.primary30 + " !important",
        borderRadius: '4px !important',
        textDecoration: 'none !important'
      },
      '& .wrapper-anchor': {
        display: 'flex',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center',
        marginRight: '5px'
      },
      '& .wrapper-icon-left-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center',
        marginRight: '5px'
      },
      '& .wrapper-icon-left-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center',
        marginRight: '5px'
      },
      '& .wrapper-icon-right-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center',
        marginLeft: '5px'
      },
      '& .wrapper-icon-right-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center',
        marginLeft: '5px'
      },
      '& .wrapper-icon-right-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center',
        marginLeft: '5px'
      },
      sm: {
        color: color.primary50 + " !important",
        fontSize: '14px',
        lineHeight: '21px',
        fontWeight: '700',
        textDecoration: 'none',
        display: 'inline-flex',
        alignItems: 'center'
      },
      md: {
        color: color.primary50,
        fontSize: '16px',
        lineHeight: '24px',
        fontWeight: '700',
        textDecoration: 'none',
        display: 'inline-flex',
        alignItems: 'center'
      },
      lg: {
        color: color.primary50,
        fontSize: '18px',
        lineHeight: '28px',
        fontWeight: '700',
        textDecoration: 'none',
        display: 'inline-flex',
        alignItems: 'center'
      }
    }
  },
  forms: {
    radio: {
      // ':focus-within': {
      //   border: 'none !important',
      //   outline: 'none !important',
      // },
      // ':focus-visible': {
      //   border: 'none !important',
      //   outline: 'none !important',
      // },
      ':hover': {
        // border: 'none !important',
        // outline: 'none !important',
        color: 'red !important'
      },
      md: {
        ':focus': {
          border: 'none !important',
          outline: 'none !important'
        },
        appearance: 'none'
      }
    },
    // radio: {
    // appearance: 'none',
    // cursor: 'pointer',
    // backgroundColor: '#FFFFFF',
    // color: 'transparent',
    // border: '2px solid #D8DAE5',
    // width: '24px',
    // height: '20px',
    // position: 'absolute',
    // position: 'relative !important',
    // border: 'none !important',
    // ':hover': {
    // outline: 'none',
    // border: '2px solid #E42313',
    // background: '#F9E4E4',
    // color: 'transparent',
    // width: '20px',
    // height: '20px',
    // position: 'relative',
    // top: 0,
    // left: 0,
    // '&:after': {
    //   width: '12px !important',
    //   height: '12px !important',
    //   borderRadius: '50% !important',
    //   background: 'yellow !important',
    //   content: '""',
    // }
    // },
    // 'input:checked ~ &': {
    //   backgroundColor: '#52BD94 !important',
    // },
    // ':checked': {
    //   backgroundColor: 'blue !important',
    //   '&.css-xpp3tq': {
    //     display: 'block',
    //     zIndex: 2,
    //     width: '12px !important',
    //     height: '12px !important',
    //     borderRadius: '50% !important',
    //     background: 'blue !important',
    //   }
    // },
    // },
    textarea: {
      labelTextArea: {
        color: '#2E3032',
        fontWeight: 600,
        marginBottom: '5px',
        fontFamily: 'Nunito Sans, sans-serif'
      },
      '&::placeholder': {
        color: color.secondary60
      },
      ':disabled': {
        border: '1px solid rgb(143, 149, 178) !important',
        backgroundColor: 'rgb(237, 239, 245) !important',
        ':hover': {
          border: '1px solid rgb(143, 149, 178) !important',
          outline: 'none'
        }
      },
      ':hover': {
        outline: 'none',
        border: "1px solid " + color.primary50 + " !important"
      },
      ':focus': {
        outline: 'none',
        border: "1px solid " + color.primary50,
        boxShadow: "0px 0px 0px 2px " + color.primary40
      },
      normal: {
        border: '1px solid #8F95B2'
      },
      success: {
        border: '1px solid #52BD94'
      },
      error: {
        border: '1px solid #FF5630'
      }
    },
    "switch": {
      md: {
        height: '22px',
        width: '40px',
        marginTop: '-2px'
      },
      sm: {
        marginTop: '2px',
        height: '17px',
        width: '28px',
        div: {
          height: '12px !important',
          width: '12px !important'
        }
      },
      background: '#C8CCD2 !important',
      'input:checked ~ &': {
        backgroundColor: '#52BD94 !important'
      },
      ':disabled': {
        background: '#D9DDE3 !important'
      }
    },
    checkbox: {
      sizeBoxLarge: {
        fontSize: '16px',
        display: 'flex',
        alignItems: 'center',
        cursor: 'pointer',
        width: 'fit-content',
        fontFamily: 'Nunito Sans, sans-serif'
      },
      sizeBoxSmall: {
        fontSize: '14px',
        display: 'flex',
        alignItems: 'center',
        cursor: 'pointer',
        width: 'fit-content',
        fontFamily: 'Nunito Sans, sans-serif'
      },
      wrappLabel: {
        marginLeft: '10px'
      },
      '& .container-checkbox': {
        display: 'flex',
        alignItems: 'center'
      },
      check: {
        sm: {
          height: '20px !important',
          width: '20px !important'
        },
        '&:disabled': {
          '&:hover': {
            '&:after': {
              content: '""'
            },
            cursor: 'pointer'
          },
          '&:checked': {
            '&:after': {
              content: '"\\2714"',
              color: color.grayscale60
            }
          },
          backgroundColor: color.grayscale30 + " !important",
          borderRadius: '4px !important',
          border: 'none !important'
        },
        height: '24px',
        width: '24px',
        appearance: 'none',
        border: "2px solid " + color.grayscale30,
        borderRadius: '4px',
        cursor: 'pointer',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        '&:hover': {
          border: "2px solid " + color.primary50,
          '&:after': {
            color: color.primary20,
            content: '"\\2714"'
          }
        },
        '&:checked': {
          backgroundColor: color.primary50,
          border: 'none',
          '&:after': {
            content: '"\\2714"',
            color: color.grayscale10
          },
          '&:hover': {
            backgroundColor: color.primary60
          }
        }
      },
      indeterminate: {
        sm: {
          height: '20px !important',
          width: '20px !important'
        },
        '&:disabled': {
          '&:hover': {
            '&:after': {
              content: '""'
            },
            cursor: 'pointer'
          },
          '&:checked': {
            '&:after': {
              content: '"\\2012"',
              color: color.grayscale60
            }
          },
          backgroundColor: color.grayscale30 + " !important",
          borderRadius: '4px !important',
          border: 'none !important'
        },
        height: '24px',
        width: '24px',
        appearance: 'none',
        border: "2px solid " + color.grayscale30,
        borderRadius: '4px',
        cursor: 'pointer',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        '&:hover': {
          border: "2px solid " + color.primary50,
          '&:after': {
            color: color.primary20,
            content: '"\\2012"'
          }
        },
        '&:checked': {
          backgroundColor: color.primary50,
          border: 'none',
          '&:after': {
            content: '"\\2012"',
            color: color.grayscale10
          },
          '&:hover': {
            backgroundColor: color.primary60
          }
        }
      }
    },
    input: {
      container: {
        position: 'relative',
        display: 'flex !important',
        flexDirection: 'row',
        alignItems: 'center !important',
        height: '44px !important',
        backgroundColor: '#FFFFFF',
        marginBottom: '30px'
      },
      containPrefLeft: {
        display: 'flex',
        height: '44px',
        alignItems: 'center',
        justifyContent: 'center',
        paddingLeft: '12px',
        pointerEvents: 'none',
        zIndex: 3
      },
      wrapperPrefLeft: {
        color: '#2E3032',
        fontWeight: '600',
        fontSize: '16px',
        lineHeight: '24px'
      },
      limitPrefLeft: {
        height: '24px',
        borderRight: '1px solid #D9DDE3',
        marginLeft: '12px'
      },
      wrappPrefLeftIconLeft: {
        display: 'flex',
        alignItems: 'center',
        width: '16px',
        height: '16px',
        marginLeft: '12px',
        zIndex: 2
      },
      wrappIconLeft: {
        position: 'relative',
        marginLeft: '15px',
        zIndex: 2,
        display: 'flex',
        alignItems: 'center',
        width: '16px',
        height: '16px'
      },
      wrappField: {
        position: 'absolute',
        zIndex: 1,
        top: '0px',
        left: '0px',
        width: '100%',
        height: '44px',
        borderRadius: '4px',
        border: '1px solid #8F95B2 !important',
        backgroundColor: '#EDEFF5 !important',
        transition: 'all 0.15s ease-in-out 0s'
      },
      wrappNormal: {
        position: 'absolute',
        zIndex: 1,
        top: '0px',
        left: '0px',
        width: '100%',
        height: '44px',
        borderRadius: '4px',
        border: '1px solid #8F95B2',
        transition: 'all 0.15s ease-in-out 0s'
      },
      wrappSuccess: {
        zIndex: 1,
        top: '0px',
        left: '0px',
        width: '100%',
        height: '44px',
        borderRadius: '4px',
        border: '1px solid #52BD94',
        transition: 'all 0.15s ease-in-out 0s',
        position: 'absolute'
      },
      wrappError: {
        zIndex: 1,
        top: '0px',
        left: '0px',
        width: '100%',
        height: '44px',
        borderRadius: '4px',
        border: '1px solid #FF5630',
        transition: 'all 0.15s ease-in-out 0s',
        position: 'absolute'
      },
      wrappPrefRightIconRight: {
        display: 'flex',
        alignItems: 'center',
        width: '16px',
        height: '16px',
        zIndex: 2,
        marginRight: '12px'
      },
      wrappIconRight: {
        position: 'relative',
        zIndex: 2,
        display: 'flex',
        alignItems: 'center',
        width: '16px',
        height: '16px',
        marginRight: '15px',
        cursor: 'pointer'
      },
      containPrefRight: {
        textAlign: 'center',
        paddingRight: '12px',
        display: 'flex',
        zIndex: 3
      },
      limitPrefRight: {
        height: '24px',
        borderRight: '1px solid #D9DDE3',
        marginRight: '12px'
      },
      wrapperPrefRight: {
        color: '#2E3032',
        fontWeight: '600',
        fontSize: '16px',
        lineHeight: '24px'
      },
      wrappLabelField: {
        marginBottom: '5px',
        fontSize: '16px',
        fontFamily: 'Nunito Sans, sans-serif',
        fontWeight: 600
      },
      wrapErrorMessage: {
        marginTop: '-25px',
        fontSize: '14px',
        color: '#FF5630'
      },
      '&:disabled': {
        zIndex: 2,
        border: 0,
        backgroundColor: 'transparent !important'
      },
      normal: {
        '&:focus': {
          outline: 'none'
        },
        '&::placeholder': {
          color: color.secondary60
        },
        '&:hover ~ .css-wot0oi-Textfield': {
          outline: 'none',
          border: "1px solid " + color.primary50 + " !important"
        },
        '&:focus ~ .css-wot0oi-Textfield': {
          outline: 'none',
          border: "1px solid " + color.primary50,
          boxShadow: "0px 0px 0px 2px " + color.primary40
        },
        '& .css-1cqyib9-Textfield': {
          paddingLeft: '30px !important'
        },
        border: '0',
        backgroundColor: 'transparent',
        padding: '10px 12px 10px 12px',
        zIndex: '2'
      },
      success: {
        '&:hover ~ .css-1nk40ql-Textfield': {
          outline: 'none',
          border: "1px solid " + color.primary50 + " !important"
        },
        '&:focus': {
          outline: 'none'
        },
        '&:focus ~ .css-1nk40ql-Textfield': {
          outline: 'none',
          border: "1px solid " + color.primary50,
          boxShadow: "0px 0px 0px 2px " + color.primary40
        },
        zIndex: 2,
        border: '0',
        backgroundColor: 'transparent',
        padding: '10px 12px 10px 12px !important'
      },
      error: {
        '&:hover ~ .css-19xfusu-Textfield': {
          outline: 'none',
          border: "1px solid " + color.primary50 + " !important"
        },
        '&:focus': {
          outline: 'none'
        },
        '&:focus ~ .css-19xfusu-Textfield': {
          outline: 'none',
          border: "1px solid " + color.primary50,
          boxShadow: "0px 0px 0px 2px " + color.primary40
        },
        zIndex: 2,
        border: '0',
        backgroundColor: 'transparent',
        padding: '10px 12px 10px 12px !important'
      }
    }
  },
  buttons: {
    sm: {
      padding: '4px 8px 4px 8px !important',
      fontSize: '14px !important'
    },
    md: {
      padding: '8px 12px 8px 12px !important',
      fontSize: '16px !important'
    },
    lg: {
      padding: '12px 16px 12px 16px !important',
      fontSize: '18px !important'
    },
    'btn-secondary': /*#__PURE__*/_extends({}, button, {
      backgroundColor: 'primary20',
      color: 'primary50',
      border: 'none',
      fontFamily: 'Nunito Sans, sans-serif',
      '& .wrapper-icon-left-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '& .wrapper-icon-both-children': {
        marginLeft: '10px',
        marginRight: '10px'
      },
      '& .wrapper-icon-left-children': {
        marginLeft: '10px'
      },
      '& .wrapper-icon-right-children': {
        marginRight: '10px'
      },
      '& .wrapper-two-icon': {
        marginRight: '10px'
      },
      '& .wrapperIconLeft': {
        marginRight: 10
      },
      '& .wrapperIconRight': {
        marginLeft: 10
      },
      '& .wrapper-icon-right-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '&:hover': {
        backgroundColor: 'primary30',
        boxShadow: 'none !important'
      },
      '&:focus': {
        boxShadow: "0px 0px 0px 2px " + color.primary40 + " !important"
      },
      '&:active': {
        backgroundColor: color.primary40 + " !important",
        boxShadow: 'none !important'
      },
      '&:disabled': {
        cursor: 'unset !important',
        backgroundColor: color.grayscale30 + " !important",
        color: color.grayscale50 + " !important"
      }
    }),
    'btn-primary': /*#__PURE__*/_extends({}, button, {
      backgroundColor: 'primary50',
      color: 'grayscale10',
      border: 'none',
      fontFamily: 'Nunito Sans, sans-serif',
      '& .wrapper-icon-left-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '& .wrapper-icon-both-children': {
        marginLeft: '10px',
        marginRight: '10px'
      },
      '& .wrapper-icon-left-children': {
        marginLeft: '10px'
      },
      '& .wrapper-icon-right-children': {
        marginRight: '10px'
      },
      '& .wrapper-two-icon': {
        marginRight: '10px'
      },
      '& .wrapperIconLeft': {
        marginRight: 10
      },
      '& .wrapperIconRight': {
        marginLeft: 10
      },
      '& .wrapper-icon-right-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '&:hover': {
        backgroundColor: 'primary60',
        boxShadow: 'none !important'
      },
      '&:focus': {
        boxShadow: "0px 0px 0px 2px " + color.primary40 + " !important"
      },
      '&:active': {
        backgroundColor: color.primary70 + " !important",
        boxShadow: 'none !important'
      },
      '&:disabled': {
        cursor: 'unset !important',
        backgroundColor: color.grayscale30 + " !important",
        color: color.grayscale50 + " !important"
      }
    }),
    solid: /*#__PURE__*/_extends({}, button, {
      backgroundColor: 'primary50',
      color: 'grayscale10',
      border: 'none',
      fontFamily: 'Nunito Sans, sans-serif',
      '& .wrapper-icon-left-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '& .wrapper-icon-both-children': {
        marginLeft: '10px',
        marginRight: '10px'
      },
      '& .wrapper-icon-left-children': {
        marginLeft: '10px'
      },
      '& .wrapper-icon-right-children': {
        marginRight: '10px'
      },
      '& .wrapper-two-icon': {
        marginRight: '10px'
      },
      '& .wrapperIconLeft': {
        marginRight: 10
      },
      '& .wrapperIconRight': {
        marginLeft: 10
      },
      '& .wrapper-icon-right-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '&:hover': {
        backgroundColor: 'primary60',
        boxShadow: 'none !important'
      },
      '&:focus': {
        boxShadow: "0px 0px 0px 2px " + color.primary40 + " !important"
      },
      '&:active': {
        backgroundColor: color.primary70 + " !important",
        boxShadow: 'none !important'
      },
      '&:disabled': {
        cursor: 'unset !important',
        backgroundColor: color.grayscale30 + " !important",
        color: color.grayscale50 + " !important"
      }
    }),
    outline: /*#__PURE__*/_extends({}, button, {
      backgroundColor: 'grayscale10',
      border: "1px solid " + color.primary50,
      color: 'primary50',
      fontFamily: 'Nunito Sans, sans-serif',
      '& .wrapper-icon-left-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '& .wrapper-icon-both-children': {
        marginLeft: '10px',
        marginRight: '10px'
      },
      '& .wrapper-icon-left-children': {
        marginLeft: '10px'
      },
      '& .wrapper-icon-right-children': {
        marginRight: '10px'
      },
      '& .wrapper-two-icon': {
        marginRight: '10px'
      },
      '& .wrapperIconLeft': {
        marginRight: 10
      },
      '& .wrapperIconRight': {
        marginLeft: 10
      },
      '& .wrapper-icon-right-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '&:hover': {
        backgroundColor: 'primary10',
        border: 'primary60',
        color: 'primary60',
        boxShadow: 'none !important'
      },
      '&:active': {
        backgroundColor: color.primary20,
        border: "1px solid " + color.primary70,
        color: color.primary70,
        boxShadow: 'none !important'
      },
      '&:focus': {
        boxShadow: "0px 0px 0px 2px " + color.primary40
      },
      '&:disabled': {
        cursor: 'unset',
        appearance: 'none',
        backgroundColor: color.grayscale10 + " !important",
        border: "1px solid " + color.grayscale50 + " !important",
        color: color.grayscale50 + " !important"
      }
    }),
    soft: /*#__PURE__*/_extends({}, button, {
      backgroundColor: 'primary10',
      color: 'primary50',
      border: 'none',
      fontFamily: 'Nunito Sans, sans-serif',
      '& .wrapper-icon-left-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '& .wrapper-icon-both-children': {
        marginLeft: '10px',
        marginRight: '10px'
      },
      '& .wrapper-icon-left-children': {
        marginLeft: '10px'
      },
      '& .wrapper-icon-right-children': {
        marginRight: '10px'
      },
      '& .wrapper-two-icon': {
        marginRight: '10px'
      },
      '& .wrapperIconLeft': {
        marginRight: 10
      },
      '& .wrapperIconRight': {
        marginLeft: 10
      },
      '& .wrapper-icon-right-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '&:hover': {
        color: 'primary60',
        backgroundColor: 'primary20',
        boxShadow: 'none'
      },
      '&:focus': {
        backgroundColor: color.primary10 + " !important",
        color: color.primary50 + " !important",
        boxShadow: "0px 0px 0px 2px " + color.primary40
      },
      '&:active': {
        backgroundColor: color.primary30 + " !important",
        color: color.primary70 + " !important",
        boxShadow: 'none !important'
      },
      '&:disabled': {
        cursor: 'unset',
        appearance: 'none',
        backgroundColor: color.grayscale20 + " !important",
        color: color.grayscale50 + " !important",
        border: 'none !important'
      }
    }),
    transparent: /*#__PURE__*/_extends({}, button, {
      backgroundColor: 'transparent',
      border: 'none',
      color: 'primary50',
      fontFamily: 'Nunito Sans, sans-serif',
      '& .wrapper-icon-left-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '& .wrapper-icon-both-children': {
        marginLeft: '10px',
        marginRight: '10px'
      },
      '& .wrapper-icon-left-children': {
        marginLeft: '10px'
      },
      '& .wrapper-icon-right-children': {
        marginRight: '10px'
      },
      '& .wrapper-two-icon': {
        marginRight: '10px'
      },
      '& .wrapperIconLeft': {
        marginRight: 10
      },
      '& .wrapperIconRight': {
        marginLeft: 10
      },
      '& .wrapper-icon-right-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '&:hover': {
        backgroundColor: 'primary10',
        color: 'primary60',
        boxShadow: 'none !important'
      },
      '&:focus': {
        backgroundColor: color.grayscale10 + " !important",
        color: color.primary50 + " !important",
        boxShadow: "0px 0px 0px 2px " + color.primary40
      },
      '&:active': {
        backgroundColor: color.primary10 + " !important",
        color: color.primary70 + " !important",
        boxShadow: 'none !important'
      },
      '&:disabled': {
        cursor: 'unset',
        appearance: 'none',
        backgroundColor: 'transparent !important',
        border: 'none !important',
        color: color.grayscale40 + " !important"
      }
    }),
    outlineSecondary: /*#__PURE__*/_extends({}, button, {
      backgroundColor: 'grayscale10',
      border: "1px solid " + color.grayscale50,
      color: 'grayscale80',
      fontFamily: 'Nunito Sans, sans-serif',
      '& .wrapper-icon-left-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '& .wrapper-icon-both-children': {
        marginLeft: '10px',
        marginRight: '10px'
      },
      '& .wrapper-icon-left-children': {
        marginLeft: '10px'
      },
      '& .wrapper-icon-right-children': {
        marginRight: '10px'
      },
      '& .wrapper-two-icon': {
        marginRight: '10px'
      },
      '& .wrapperIconLeft': {
        marginRight: 10
      },
      '& .wrapperIconRight': {
        marginLeft: 10
      },
      '& .wrapper-icon-right-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '&:hover': {
        backgroundColor: '#F6F7FC !important',
        border: "1px solid " + color.grayscale80 + " !important",
        color: color.grayscale80 + " !important",
        boxShadow: 'none !important'
      },
      '&:focus': {
        backgroundColor: color.grayscale10 + " !important",
        border: "1px solid " + color.grayscale50,
        boxShadow: "0px 0px 0px 2px " + color.secondary40,
        color: color.grayscale80
      },
      '&:active': {
        backgroundColor: '#EEF0F7 !important',
        color: color.grayscale100 + " !important",
        boxShadow: 'none !important'
      },
      '&:disabled': {
        cursor: 'unset',
        appearance: 'none',
        backgroundColor: color.grayscale10 + " !important",
        border: "1px solid " + color.grayscale50 + " !important",
        color: color.grayscale50 + " !important"
      }
    }),
    softSecondary: /*#__PURE__*/_extends({}, button, {
      backgroundColor: '#F6F7FC',
      color: 'grayscale80',
      border: 'none',
      fontFamily: 'Nunito Sans, sans-serif',
      '& .wrapper-icon-left-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-left-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '& .wrapper-icon-both-children': {
        marginLeft: '10px',
        marginRight: '10px'
      },
      '& .wrapper-icon-left-children': {
        marginLeft: '10px'
      },
      '& .wrapper-icon-right-children': {
        marginRight: '10px'
      },
      '& .wrapper-two-icon': {
        marginRight: '10px'
      },
      '& .wrapperIconLeft': {
        marginRight: 10
      },
      '& .wrapperIconRight': {
        marginLeft: 10
      },
      '& .wrapper-icon-right-large': {
        display: 'flex',
        width: '20px',
        height: '20px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-medium': {
        display: 'flex',
        width: '16px',
        height: '16px',
        alignItems: 'center'
      },
      '& .wrapper-icon-right-small': {
        display: 'flex',
        width: '12px',
        height: '12px',
        alignItems: 'center'
      },
      '&:hover': {
        backgroundColor: '#EEF0F7',
        color: 'grayscale80',
        boxShadow: 'none !important'
      },
      '&:focus': {
        backgroundColor: color.grayscale10,
        color: color.grayscale80,
        boxShadow: "0px 0px 0px 2px " + color.secondary40
      },
      '&:active': {
        backgroundColor: '#E5E6EF !important',
        color: color.grayscale100 + " !important",
        boxShadow: 'none !important'
      },
      '&:disabled': {
        appearance: 'none',
        cursor: 'context-menu',
        backgroundColor: color.grayscale20 + " !important",
        color: color.grayscale50 + " !important",
        border: 'none !important'
      }
    })
  },
  badges: {
    primary: {
      bg: "" + color.primary50
    },
    online: {
      bg: "" + color.success50
    },
    small: {
      width: 8,
      height: 8,
      borderRadius: 8 / 2
    },
    smallWithBorder: {
      border: '1px solid white',
      height: 10,
      borderRadius: 10 / 2
    },
    largeWithBorder: {
      border: '2px solid white'
    },
    smallWithContent: {
      display: 'inline-flex',
      alignItems: 'center',
      height: 21,
      borderRadius: 24,
      paddingX: '7px'
    },
    largeWithContent: {
      display: 'inline-flex',
      alignItems: 'center',
      height: 28,
      borderRadius: 24,
      paddingX: '14px'
    },
    large: {
      width: 12,
      height: 12,
      borderRadius: 12 / 2
    }
  },
  spinner: {
    primary: {
      color: color.primary50
    },
    secondary: {
      color: color.secondary50
    }
  },
  alerts: {
    primary: {
      bg: color.primary50,
      span: {
        color: color.grayscale10
      }
    },
    secondary: {
      bg: color.secondary50,
      color: color.grayscale90,
      span: {
        color: color.grayscale90
      }
    },
    info: {
      bg: color.information50
    },
    success: {
      bg: color.success50
    },
    error: {
      bg: color.error50
    },
    warning: {
      bg: color.warning50,
      color: color.grayscale90,
      span: {
        color: color.grayscale90
      }
    }
  }
});

var _excluded = ["iconLeft", "iconRight", "disabled", "size", "variant", "children"];
var Button = function Button(_ref) {
  var iconLeft = _ref.iconLeft,
      iconRight = _ref.iconRight,
      disabled = _ref.disabled,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'md' : _ref$size,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'solid' : _ref$variant,
      children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded);

  var context = core.useThemeUI();
  var sizes = css.get(context.theme, "buttons." + size);
  var variants = css.get(context.theme, "buttons." + variant);
  return core.jsx(components.Button, Object.assign({
    sx: _extends({}, variants, sizes)
  }, rest, {
    disabled: disabled
  }), iconLeft && size === 'lg' && core.jsx("span", {
    className: 'wrapper-icon-left-large'
  }, iconLeft) || iconLeft && size === 'md' && core.jsx("span", {
    className: 'wrapper-icon-left-medium'
  }, iconLeft) || iconLeft && size === 'sm' && core.jsx("span", {
    className: 'wrapper-icon-left-small'
  }, iconLeft), children && core.jsx("span", {
    className: iconRight && iconLeft && size ? 'wrapper-icon-both-children' :  iconLeft && size ? 'wrapper-icon-left-children' :  iconRight && size ? 'wrapper-icon-right-children' : ''
  }, children), !children && iconLeft && iconRight && size && core.jsx("span", {
    className: "wrapper-two-icon"
  }), iconRight && size === 'lg' && core.jsx("span", {
    className: 'wrapper-icon-right-large'
  }, iconRight) || iconRight && size === 'md' && core.jsx("span", {
    className: 'wrapper-icon-right-medium'
  }, iconRight) || iconRight && size === 'sm' && core.jsx("span", {
    className: 'wrapper-icon-right-small'
  }, iconRight));
};

var _excluded$1 = ["variant", "disabled", "iconLeft", "prefixLeft", "prefixRight", "label", "iconRight", "errorMessage", "type"];
var Textfield = function Textfield(_ref) {
  var _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'normal' : _ref$variant,
      disabled = _ref.disabled,
      iconLeft = _ref.iconLeft,
      prefixLeft = _ref.prefixLeft,
      prefixRight = _ref.prefixRight,
      _ref$label = _ref.label,
      label = _ref$label === void 0 ? '' : _ref$label,
      iconRight = _ref.iconRight,
      _ref$errorMessage = _ref.errorMessage,
      errorMessage = _ref$errorMessage === void 0 ? '' : _ref$errorMessage,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'input' : _ref$type,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);

  var context = core.useThemeUI();
  var variants = css.get(context.theme, "forms.input." + variant);
  var container = css.get(context.theme, "forms.input.container");
  var containPrefLeft = css.get(context.theme, "forms.input.containPrefLeft");
  var wrapperPrefLeft = css.get(context.theme, "forms.input.wrapperPrefLeft");
  var limitPrefLeft = css.get(context.theme, "forms.input.limitPrefLeft");
  var wrappPrefLeftIconLeft = css.get(context.theme, "forms.input.wrappPrefLeftIconLeft");
  var wrappIconLeft = css.get(context.theme, "forms.input.wrappIconLeft");
  var wrappField = css.get(context.theme, "forms.input.wrappField");
  var wrappNormal = css.get(context.theme, "forms.input.wrappNormal");
  var wrappSuccess = css.get(context.theme, "forms.input.wrappSuccess");
  var wrappError = css.get(context.theme, "forms.input.wrappError");
  var wrappPrefRightIconRight = css.get(context.theme, "forms.input.wrappPrefRightIconRight");
  var wrappIconRight = css.get(context.theme, "forms.input.wrappIconRight");
  var containPrefRight = css.get(context.theme, "forms.input.containPrefRight");
  var limitPrefRight = css.get(context.theme, "forms.input.limitPrefRight");
  var wrapperPrefRight = css.get(context.theme, "forms.input.wrapperPrefRight");
  var wrappLabelField = css.get(context.theme, "forms.input.wrappLabelField");
  var wrapErrorMessage = css.get(context.theme, "forms.input.wrapErrorMessage");
  return core.jsx(React.Fragment, null, core.jsx("div", {
    sx: _extends({}, wrappLabelField)
  }, label), core.jsx("div", {
    sx: _extends({}, container)
  }, prefixLeft && core.jsx("div", {
    sx: _extends({}, containPrefLeft)
  }, core.jsx("span", {
    sx: _extends({}, wrapperPrefLeft)
  }, prefixLeft), core.jsx("span", {
    sx: _extends({}, limitPrefLeft)
  })), prefixLeft && iconLeft && core.jsx("span", {
    sx: _extends({}, wrappPrefLeftIconLeft)
  }, iconLeft) || iconLeft && core.jsx("span", {
    sx: _extends({}, wrappIconLeft)
  }, iconLeft), core.jsx(components.Input, Object.assign({}, rest, {
    type: type,
    sx: _extends({}, variants),
    disabled: disabled
  })), variant && disabled && core.jsx("div", {
    sx: _extends({}, wrappField)
  }) || variant === 'normal' && core.jsx("div", {
    sx: _extends({}, wrappNormal)
  }) || variant === 'success' && core.jsx("div", {
    sx: _extends({}, wrappSuccess)
  }) || variant === 'error' && core.jsx("div", {
    sx: _extends({}, wrappError)
  }), prefixRight && iconRight && core.jsx("span", {
    sx: _extends({}, wrappPrefRightIconRight)
  }, iconRight) || iconRight && core.jsx("span", {
    sx: _extends({}, wrappIconRight)
  }, iconRight), prefixRight && core.jsx("div", {
    sx: _extends({}, containPrefRight)
  }, core.jsx("span", {
    sx: _extends({}, limitPrefRight)
  }), core.jsx("span", {
    sx: _extends({}, wrapperPrefRight)
  }, prefixRight))), core.jsx("div", {
    sx: _extends({}, wrapErrorMessage)
  }, errorMessage));
};

var _excluded$2 = ["disabled", "label", "variant", "sizeBox"];
var Checkbox = function Checkbox(_ref) {
  var disabled = _ref.disabled,
      _ref$label = _ref.label,
      label = _ref$label === void 0 ? '' : _ref$label,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'check' : _ref$variant,
      _ref$sizeBox = _ref.sizeBox,
      sizeBox = _ref$sizeBox === void 0 ? 'lg' : _ref$sizeBox,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$2);

  var context = core.useThemeUI();
  var labels = css.get(context.theme, "forms.checkbox." + label);
  var variants = css.get(context.theme, "forms.checkbox." + variant);
  var sizes = css.get(context.theme, "forms.checkbox." + variant + "." + sizeBox);
  var sizeBoxLarge = css.get(context.theme, "forms.checkbox.sizeBoxLarge");
  var sizeBoxSmall = css.get(context.theme, "forms.checkbox.sizeBoxSmall");
  var wrappLabel = css.get(context.theme, "forms.checkbox.wrappLabel");
  return core.jsx(React.Fragment, null, label ? core.jsx("label", {
    sx: sizeBox === 'lg' ? _extends({}, sizeBoxLarge) : _extends({}, sizeBoxSmall)
  }, core.jsx(components.Input, Object.assign({}, rest, {
    type: "checkbox",
    sx: _extends({}, labels, variants, sizes),
    disabled: disabled
  })), core.jsx("div", {
    sx: _extends({}, wrappLabel)
  }, label)) : core.jsx(components.Input, Object.assign({}, rest, {
    type: "checkbox",
    sx: _extends({}, labels, variants, sizes),
    disabled: disabled
  })));
};

var _excluded$3 = ["disabledAncor", "size", "type", "iconLeft", "iconRight", "children"];
var Anchor = function Anchor(_ref) {
  var disabledAncor = _ref.disabledAncor,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'md' : _ref$size,
      iconLeft = _ref.iconLeft,
      iconRight = _ref.iconRight,
      children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$3);

  var context = core.useThemeUI();
  var sizes = css.get(context.theme, "styles.a." + size);
  return core.jsx(React.Fragment, null, core.jsx(components.Link, Object.assign({}, rest, {
    sx: _extends({}, sizes, {
      color: disabledAncor ? '#B1B5BA' : '#E42313',
      pointerEvents: disabledAncor && 'none'
    })
  }), iconLeft && size === 'lg' && core.jsx("span", {
    className: 'wrapper-icon-left-large'
  }, iconLeft) || iconLeft && size === 'md' && core.jsx("span", {
    className: 'wrapper-icon-left-medium'
  }, iconLeft) || iconLeft && size === 'sm' && core.jsx("span", {
    className: 'wrapper-icon-left-small'
  }, iconLeft), children, iconRight && size === 'lg' && core.jsx("span", {
    className: 'wrapper-icon-right-large'
  }, iconRight) || iconRight && size === 'md' && core.jsx("span", {
    className: 'wrapper-icon-right-medium'
  }, iconRight) || iconRight && size === 'sm' && core.jsx("span", {
    className: 'wrapper-icon-right-small'
  }, iconRight)));
};

var _excluded$4 = ["background", "titleLoginPage", "descLoginPage", "formPosition", "logo", "disabledForm", "onChangeLogin", "onSubmitLogin", "form"];
var LoginPage = function LoginPage(_ref) {
  var background = _ref.background,
      _ref$titleLoginPage = _ref.titleLoginPage,
      titleLoginPage = _ref$titleLoginPage === void 0 ? '' : _ref$titleLoginPage,
      _ref$descLoginPage = _ref.descLoginPage,
      descLoginPage = _ref$descLoginPage === void 0 ? '' : _ref$descLoginPage,
      _ref$formPosition = _ref.formPosition,
      formPosition = _ref$formPosition === void 0 ? 'left' : _ref$formPosition,
      logo = _ref.logo,
      disabledForm = _ref.disabledForm,
      _ref$onChangeLogin = _ref.onChangeLogin,
      onChangeLogin = _ref$onChangeLogin === void 0 ? function () {} : _ref$onChangeLogin,
      _ref$onSubmitLogin = _ref.onSubmitLogin,
      onSubmitLogin = _ref$onSubmitLogin === void 0 ? function () {} : _ref$onSubmitLogin,
      form = _ref.form,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$4);

  var _React$useState = React.useState(""),
      email = _React$useState[0],
      setEmail = _React$useState[1];

  var _React$useState2 = React.useState(""),
      password = _React$useState2[0],
      setPassword = _React$useState2[1];

  var _React$useState3 = React.useState(false),
      remember = _React$useState3[0],
      setRemember = _React$useState3[1];

  var _React$useState4 = React.useState(false),
      showPass = _React$useState4[0],
      setshowPass = _React$useState4[1];

  var onChangeFields = function onChangeFields(name, value) {
    if (name === 'email') {
      setEmail(value);
      return onChangeLogin({
        email: value,
        password: password,
        remember: remember
      });
    }

    if (name === 'password') {
      setPassword(value);
      return onChangeLogin({
        email: email,
        password: value,
        remember: remember
      });
    }

    if (name === 'remember') {
      setRemember(value);
      return onChangeLogin({
        email: email,
        password: password,
        remember: value
      });
    }
  };

  var onChangeEmail = function onChangeEmail(name, value) {
    onChangeFields(name, value);
  };

  var onChangePassword = function onChangePassword(name, value) {
    onChangeFields(name, value);
  };

  var onChangeRemember = function onChangeRemember(checked) {
    onChangeFields('remember', checked);
  };

  var onSubmit = function onSubmit() {
    var data = {
      email: email,
      password: password,
      remember: remember
    };
    onSubmitLogin(data);
    return data;
  };

  var _onSubmitLogin = function _onSubmitLogin(e) {
    e.preventDefault();
    var data = {
      email: email,
      password: password,
      remember: remember
    };
    return data;
  };

  var onClickShowPass = function onClickShowPass() {
    setshowPass(!showPass);
  };

  var position;

  if (formPosition === 'left') {
    position = 'form-side-left';
  } else if (formPosition === 'right') {
    position = 'form-side-right';
  } else {
    position = 'form-side-center';
  }

  return core.jsx(components.Container, Object.assign({}, rest), core.jsx("div", {
    className: formPosition === 'center' ? 'container-login-center' : 'container-login'
  }, form ? core.jsx("div", {
    className: position
  }, form) : core.jsx("div", {
    className: position
  }, core.jsx("div", {
    className: 'container-logo'
  }, core.jsx("img", {
    className: 'wrapper-logo',
    src: logo
  })), core.jsx("div", {
    className: 'wrapper-title'
  }, titleLoginPage), core.jsx("div", {
    className: 'wrapper-desc'
  }, descLoginPage), core.jsx("form", {
    onSubmit: function onSubmit(e) {
      return _onSubmitLogin(e);
    }
  }, core.jsx(Textfield, {
    disabled: disabledForm,
    name: 'email',
    label: "Email Address",
    placeholder: 'Insert Email',
    iconLeft: core.jsx(reactFeather.Mail, null),
    onChange: function onChange(e) {
      return onChangeEmail(e.target.name, e.target.value);
    }
  }), core.jsx(Textfield, {
    disabled: disabledForm,
    name: 'password',
    type: showPass ? 'text' : 'password',
    iconLeft: core.jsx(reactFeather.Lock, null),
    label: "Password",
    iconRight: showPass ? core.jsx(reactFeather.Eye, {
      onClick: function onClick() {
        return onClickShowPass();
      }
    }) : core.jsx(reactFeather.EyeOff, {
      onClick: function onClick() {
        return onClickShowPass();
      }
    }),
    onChange: function onChange(e) {
      return onChangePassword(e.target.name, e.target.value);
    },
    placeholder: 'Insert Password'
  }), core.jsx("div", {
    className: 'wrapper-remember'
  }, core.jsx(Checkbox, {
    disabled: disabledForm,
    label: "Remember me",
    onChange: function onChange(e) {
      return onChangeRemember(e.target.checked);
    }
  }), core.jsx(Anchor, {
    disabledAncor: disabledForm
  }, "Forgot Password")), core.jsx(Button, {
    className: 'wrapper-button',
    disabled: disabledForm,
    iconLeft: core.jsx(reactFeather.LogIn, null),
    onClick: function onClick() {
      return onSubmit();
    },
    type: 'submit',
    size: 'lg',
    variant: 'solid'
  }, "Sign in")), core.jsx("div", {
    className: 'wrapper-or'
  }, core.jsx("div", {
    className: 'wrapper-line'
  }), core.jsx("div", {
    className: 'or'
  }, "or"), core.jsx("div", {
    className: 'wrapper-line'
  })), core.jsx(Button, {
    className: 'wrapper-button',
    size: 'md',
    variant: 'outlineSecondary'
  }, "Sign in with Google"), core.jsx("br", null), core.jsx(Button, {
    size: 'md',
    className: 'wrapper-button',
    variant: 'outlineSecondary'
  }, "Sign in with Facebook"), core.jsx("div", {
    className: 'wrapper-register'
  }, "Don't have an account?\xA0 ", core.jsx(Anchor, {
    disabledAncor: disabledForm
  }, "Register Now")), core.jsx("div", {
    className: 'wrapper-footer'
  }, "\xA9 Legion Design System by Telkom Indonesia")), core.jsx("div", {
    className: 'container-side-right'
  }, core.jsx("img", {
    className: 'wrapper-background',
    src: background
  }))));
};

var _excluded$5 = ["sizeSwitch"];
var Switch = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$sizeSwitch = _ref.sizeSwitch,
      sizeSwitch = _ref$sizeSwitch === void 0 ? 'md' : _ref$sizeSwitch,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$5);

  var context = core.useThemeUI();
  var sizes = css.get(context.theme, "forms.switch." + sizeSwitch);
  return core.jsx(components.Switch, Object.assign({}, rest, {
    ref: ref,
    sx: _extends({}, sizes)
  }));
});

var _excluded$6 = ["label", "variant"];
var Textarea = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$label = _ref.label,
      label = _ref$label === void 0 ? '' : _ref$label,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'normal' : _ref$variant,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$6);

  var context = core.useThemeUI();
  var labels = css.get(context.theme, "forms.textarea.labelTextArea");
  var variants = css.get(context.theme, "forms.textarea." + variant);
  return core.jsx(React.Fragment, null, core.jsx("div", {
    sx: _extends({}, labels)
  }, label), core.jsx(components.Textarea, Object.assign({}, rest, {
    ref: ref,
    sx: _extends({}, variants)
  })));
});

var Radio = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var rest = _extends({}, _ref);

  // const context = useThemeUI();
  // const checkmark = get(context.theme, `forms.radio.checkmark`);
  return core.jsx("div", {
    sx: {
      position: 'relative'
    }
  }, core.jsx(components.Radio, Object.assign({}, rest, {
    ref: ref,
    sx: {
      'input:checked ~ &': {
        // border: '2px solid #E42313',
        border: '.5px solid #E42313',
        // background: '#FFFFFF',
        color: '#FFFFFF',
        background: '#E42313'
      }
    }
  })));
});

var _excluded$7 = ["variant", "size", "bordered"];
var Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'primary' : _ref$variant,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'small' : _ref$size,
      _ref$bordered = _ref.bordered,
      bordered = _ref$bordered === void 0 ? false : _ref$bordered,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$7);

  var context = core.useThemeUI();
  var variants = css.get(context.theme, "badges." + variant);
  var borders = css.get(context.theme, "badges." + (bordered ? size + "WithBorder" : size + "NoBorder"));
  var sizes = css.get(context.theme, "badges." + (rest.children ? size + "WithContent" : size));
  return core.jsx(components.Badge, Object.assign({
    ref: ref,
    sx: _extends({}, variants, sizes, borders)
  }, rest));
});

var _excluded$8 = ["size"];
var Avatar = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'large' : _ref$size,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$8);

  var tableSize = {
    small: 32,
    medium: 40,
    large: 64
  };
  return core.jsx(components.Avatar, Object.assign({
    ref: ref,
    width: tableSize[size],
    height: tableSize[size]
  }, rest));
});

var _excluded$9 = ["size", "children"];
var Heading = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'h2' : _ref$size,
      children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$9);

  var context = core.useThemeUI();
  var sizes = css.get(context.theme, "text.heading." + size);
  return core.jsx(components.Heading, Object.assign({}, rest, {
    ref: ref,
    sx: _extends({}, sizes)
  }), children);
});

var _excluded$a = ["variant", "children"],
    _excluded2 = ["size", "children"];
var Body = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'lg-reguler' : _ref$variant,
      children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$a);

  var context = core.useThemeUI();
  var variants = css.get(context.theme, "text.default." + variant);
  return core.jsx(components.Text, Object.assign({}, rest, {
    ref: ref,
    sx: _extends({}, variants)
  }), children);
});
var Caption = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {
  var _ref2$size = _ref2.size,
      size = _ref2$size === void 0 ? 'lg_reguler' : _ref2$size,
      children = _ref2.children,
      rest = _objectWithoutPropertiesLoose(_ref2, _excluded2);

  var context = core.useThemeUI();
  var sizes = css.get(context.theme, "text.default.sizes." + size);
  return core.jsx(components.Text, Object.assign({}, rest, {
    ref: ref,
    sx: _extends({}, sizes)
  }), children);
}); // export default Body;

var _excluded$b = ["size", "variant", "children"];
var Spinner = function Spinner(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'md' : _ref$size,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'primary' : _ref$variant,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$b);

  var context = core.useThemeUI();
  var variants = css.get(context.theme, "spinner." + variant);
  return core.jsx(React.Fragment, null, size === 'sm' && core.jsx(components.Spinner, Object.assign({
    sx: _extends({}, variants),
    strokeWidth: 4,
    size: 24
  }, rest)), size === 'md' && core.jsx(components.Spinner, Object.assign({
    sx: _extends({}, variants)
  }, rest)), size === 'lg' && core.jsx(components.Spinner, Object.assign({
    sx: _extends({}, variants),
    strokeWidth: 6,
    size: 72
  }, rest)));
};

var _excluded$c = ["children", "icon", "onAlertClose", "variant"];
var Alert = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      icon = _ref.icon,
      onAlertClose = _ref.onAlertClose,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'primary' : _ref$variant,
      rest = _objectWithoutPropertiesLoose(_ref, _excluded$c);

  var context = core.useThemeUI();
  var variants = css.get(context.theme, "alerts." + variant);
  return core.jsx(components.Alert, Object.assign({
    ref: ref,
    sx: _extends({}, variants)
  }, rest), core.jsx(components.Flex, {
    sx: {
      alignItems: icon ? 'flex-end' : 'center',
      flexDirection: 'row',
      justifyContent: 'space-between',
      width: '100%'
    }
  }, icon ? core.jsx(components.Box, {
    sx: {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center'
    }
  }, core.jsx("span", null, icon), core.jsx(components.Text, {
    sx: {
      marginLeft: '10px'
    }
  }, children)) : core.jsx(components.Text, null, children), core.jsx(components.Close, {
    sx: {
      cursor: 'pointer'
    },
    onClick: onAlertClose
  })));
});

Object.defineProperty(exports, 'ThemeProvider', {
  enumerable: true,
  get: function () {
    return core.ThemeProvider;
  }
});
Object.defineProperty(exports, 'Divider', {
  enumerable: true,
  get: function () {
    return components.Divider;
  }
});
Object.defineProperty(exports, 'Image', {
  enumerable: true,
  get: function () {
    return components.AspectImage;
  }
});
exports.Alert = Alert;
exports.Anchor = Anchor;
exports.Avatar = Avatar;
exports.Badge = Badge;
exports.Body = Body;
exports.Button = Button;
exports.Caption = Caption;
exports.Checkbox = Checkbox;
exports.Heading = Heading;
exports.LoginPage = LoginPage;
exports.Radio = Radio;
exports.Spinner = Spinner;
exports.Switch = Switch;
exports.Textarea = Textarea;
exports.Textfield = Textfield;
exports.radius = radius;
exports.spacer = spacer;
exports.text = text;
exports.theme = theme;
//# sourceMappingURL=legion-ui.cjs.development.js.map
